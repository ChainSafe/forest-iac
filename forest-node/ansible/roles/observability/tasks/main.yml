---
# tasks file for role/observability
- name: Create a login user
  ansible.builtin.user:
    name: "{{ user }}"
    state: present

- name: Create .ssh directory for created user
  become: true
  ansible.builtin.file:
    path: "{{ user_dir }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0700"

- name: Copy public key from existing root to new user
  become: true
  ansible.builtin.copy:
    src: "/root/.ssh/authorized_keys"
    dest: "{{ user_dir_auth }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    remote_src: true
    mode: "0600"

- name: Restart SSHD
  become: true
  ansible.builtin.command: sudo service ssh restart
  changed_when: false

- name: Allow specific users to log in
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^AllowUsers'
    line: 'AllowUsers {{ user }}'
    state: present

- name: Add user to sudoers file
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: '^{{ user }}'
    line: '{{ user }} ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Add user to "docker" group
  ansible.builtin.user:
    name: '{{ user }}'
    groups: docker
    append: true

- name: Check if docker compose exist
  ansible.builtin.stat:
    path: "{{ docker_compose_path }}"
  register: observability_compose_binary

- name: Check if docker-compose exists and get its version
  block:
    - name: Get docker-compose version
      ansible.builtin.command:
        cmd: /usr/local/bin/docker-compose version --short
      when: observability_compose_binary.stat.exists
      register: observability_compose_version
      changed_when: false

    - name: Install Docker compose
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
        dest: "{{ docker_compose_path }}"
        force: true
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "0755"
      when: not observability_compose_binary.stat.exists or observability_compose_version.stdout != docker_compose_version

- name: Set-up observability stacks
  ansible.builtin.include_tasks: set-up.yml

- name: Run docker-compose
  become: true
  become_user: "{{ user }}"
  ansible.builtin.command:
    cmd: "docker-compose up --build --force-recreate -d"
    chdir: "/etc/observability"
  register: observability_compose_run
  changed_when: observability_compose_run.stdout.find("Creating") != -1

- name: Debug observability_compose_run variable
  ansible.builtin.debug:
    var: observability_compose_run

- name: Ensure Containers are running
  ansible.builtin.command: /bin/bash -c "set -o pipefail; ps aux | grep {{ item }} || true"
  register: observability_app_status
  with_items:
    - prometheus
    - loki
    - alertmanager
    - grafana
  changed_when: false

- name: Display Containers status
  ansible.builtin.debug:
    msg: "{{ observability_app_status.results | map(attribute='stdout_lines') | list }}"
