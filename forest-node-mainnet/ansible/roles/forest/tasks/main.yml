---
- name: Create a login user
  ansible.builtin.user:
    name: "{{ user }}"
    state: present

- name: Create .ssh directory for created user
  become: true
  ansible.builtin.file:
    path: "{{ user_dir }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0700"

- name: Copy public key from existing root to new user
  become: true
  ansible.builtin.copy:
    src: "/root/.ssh/authorized_keys"
    dest: "{{ user_dir_auth }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    remote_src: true
    mode: "0600"

- name: Restart SSHD
  become: true
  ansible.builtin.service:
    name: ssh
    state: restarted

- name: Allow created user to log in
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^AllowUsers'
    line: 'AllowUsers {{ user }}'
    state: present

- name: Add user to sudoers file
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: '^{{ user }}'
    line: '{{ user }} ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Add new user to "docker" group
  ansible.builtin.user:
    name: "{{ user }}"
    groups: docker
    append: true

- name: Ensure forest config directory exists
  ansible.builtin.file:
    path: "/etc/forest"
    state: "directory"
    mode: "0777"
  become: true

- name: Copy forest Data Config
  ansible.builtin.template:
    src: config.toml.j2
    dest: "/etc/forest/config.toml"
    mode: "0755"

- name: Change ownership of volume directory
  become: true
  ansible.builtin.file:
    path: /mnt/{{ volume_name }}/forest
    owner: 1000
    group: 1000
    recurse: true

- name: Start the Docker container
  become: true
  become_user: "{{ user }}"
  community.general.docker_container:
    name: forest
    image: ghcr.io/chainsafe/forest:latest
    state: started
    restart_policy: always
    command: --config {{ forest_config }} --encrypt-keystore false --auto-download-snapshot --loki --loki-endpoint "{{ loki_endpoint }}"
    pull: true
    volumes:
      - /etc/forest/config.toml:/home/forest/config.toml
      - /mnt/{{ volume_name }}/forest:/home/forest/data
    ports:
      - "1234:1234"
      - "6116:6116"
      - "3100:3100"
  register: container_result

- name: Get infos on container
  become_user: "{{ user }}"
  community.docker.docker_container_info:
    name: forest
  register: result

- name: Does container exist?
  become_user: "{{ user }}"
  ansible.builtin.debug:
    msg: "The container {{ 'exists' if result.exists else 'does not exist' }}"

- name: Print information about container
  become_user: "{{ user }}"
  ansible.builtin.debug:
    var: result.container
  when: result.exists
