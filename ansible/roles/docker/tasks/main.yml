---
# tasks file for role/docker
- name: Upgrade all apt packages
  apt: upgrade=dist force_apt_get=yes

- name: Create a login user
  user:
    name: "{{ user }}"
    state: present

- name: Add public key to authorized_keys
  authorized_key:
    user: "{{ user }}"
    state: present
    key: "{{ lookup('file', '~/sammy.pub') }}"

- name: Deny root from logging in
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?PermitRootLogin \w*$'
    line: 'PermitRootLogin no'
    state: present

- name: Restart SSHD Service 
  become: true
  shell: sudo service ssh restart 

- name: Allow specific users to log in
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^AllowUsers'
    line: 'AllowUsers {{ user }}'
    state: present

- name: Add {{ user }} to sudoers file
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: '^{{ user }}'
    line: '{{ user }} ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: create docker user
  user:
    name: '{{ user }}'
    append: true
    shell: /bin/bash
    system: true
    create_home: false

- name: Install packages to allow apt to use repository over HTTPS
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - acl
    - python3-pip 
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common

- name: Add Docker's official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: "{{ docker_apt_key }}"
    state: present
  ignore_errors: True 

- name: Add Docker repository
  apt_repository:
    repo: "deb https://download.docker.com/linux/ubuntu focal stable"
    state: present
    update_cache: yes
  ignore_errors: true

- name: Install Docker
  package:
    name: "docker-ce"
    state: present

- name: Remove Upstart config file
  file:
    path: "/etc/default/docker"
    state: absent

- name: Ensure systemd directory exists
  file:
    path: "/etc/systemd/system"
    state: directory
    owner: root
    mode: 0755

- name: Ensure docker directory exists
  file:
    path: "/etc/docker"
    state: directory
    owner: root
    mode: 0755

- name: Ensure Docker is started and enabled at boot
  service:
    name: docker
    state: started
    enabled: true

- name: Add docker users to "docker" group
  user:
    name: "{{ user }}"
    groups: docker
    append: true

- name: Run the Docker command
  become: yes
  become_user: "{{ user }}"
  shell: docker run -p 1234:1234 --rm --detach ghcr.io/chainsafe/forest:latest --encrypt-keystore false --auto-download-snapshot --chain calibnet
    
- name: Ensure app is running
  shell: ps aux | grep forest
  register: app_status
- debug: msg={{app_status.stdout_lines}}
