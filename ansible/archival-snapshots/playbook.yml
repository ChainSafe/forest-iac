---
- name: Automate packaging, transferring, and executing a script
  hosts: remote_server
  vars:
    local_resources_path: "resources"
    remote_resources_path: "/mnt/md0/exported/archival"
    zip_file_name: "resources.zip"
    forest_version: "v0.17.2"
    forest_release_url: "https://github.com/ChainSafe/forest/releases/download/{{ forest_version }}/forest-{{ forest_version }}-linux-amd64.zip"
  tasks:
    - name: Check if AWS CLI is installed
      ansible.builtin.command:
        cmd: "which aws"
      register: aws_installed
      changed_when: false
      ignore_errors: true

    - name: Install AWS CLI if not installed
      ansible.builtin.command:
        cmd: "sudo apt-get update && sudo apt-get install -y awscli"
      when: aws_installed.rc != 0

    - name: Check if Ruby is installed
      ansible.builtin.command:
        cmd: "which ruby"
      register: ruby_installed
      changed_when: false
      ignore_errors: true

    - name: Install Ruby if not installed
      ansible.builtin.command:
        cmd: "sudo apt-get update && sudo apt-get install -y ruby-full"
      when: ruby_installed.rc != 0

    - name: Zip the resources folder
      ansible.builtin.command:
        cmd: "zip -r {{ zip_file_name }} ."
        chdir: "{{ local_resources_path }}"
      delegate_to: localhost

    - name: Transfer the zip file to the remote server
      ansible.builtin.copy:
        src: "{{ local_resources_path }}/{{ zip_file_name }}"
        dest: "{{ remote_resources_path }}/{{ zip_file_name }}"

    - name: Unzip the resources folder on the remote server
      ansible.builtin.command:
        cmd: "unzip -o {{ zip_file_name }}"
        chdir: "{{ remote_resources_path }}"

    - name: Download Forest release package
      ansible.builtin.get_url:
        url: "{{ forest_release_url }}"
        dest: "{{ remote_resources_path }}/forest.zip"

    - name: Unzip the Forest release package on the remote server
      ansible.builtin.command:
        cmd: "unzip -o {{ remote_resources_path }}/forest.zip -d {{ remote_resources_path }}"

    - name: Execute the init.sh script
      ansible.builtin.shell:
        cmd: "nohup ./init.sh > init.log 2>&1 &"
        chdir: "{{ remote_resources_path }}"
      environment:
        ARCHIVAL_SLACK_TOKEN: "{{ lookup('env', 'ARCHIVAL_SLACK_TOKEN') }}"
        ENDPOINT: "{{ lookup('env', 'ENDPOINT') }}"
